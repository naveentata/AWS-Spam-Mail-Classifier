AWSTemplateFormatVersion: "2010-09-09"
Description: ""
Parameters:
  EndPoint:
    Description: Prediction endpoint to classify the email
    Type: String
    Default: spam-email-endpoint

Resources:
    LambdaFunction:
        Type: "AWS::Lambda::Function"
        DeletionPolicy: Retain
        Properties:
            Description: ""
            FunctionName: "lf0"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "prod-iad-c1-djusa-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lf0-3644614a-e753-4950-91ca-2c8b296b0861"
                S3ObjectVersion: "qXF_hCxF8UX9GRV.rOjfWKkZiSbDAppq"
            MemorySize: 128
            Role: "arn:aws:iam::374495966973:role/service-role/lf0-role-l7fix8qu"
            Runtime: "python3.7"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            Layers: 
              - !Sub "arn:aws:lambda:${AWS::Region}:668099181075:layer:AWSLambda-Python37-SciPy1x:115"
            EphemeralStorage: 
                Size: 512

    S3Bucket:
        Type: "AWS::S3::Bucket"
        DeletionPolicy: Retain
        Properties:
            BucketName: "mymailbuck"
            NotificationConfiguration: 
                LambdaConfigurations: 
                  - 
                    Event: "s3:ObjectCreated:*"
                    Function: !GetAtt LambdaFunction.Arn

    S3Bucket2:
        Type: "AWS::S3::Bucket"
        DeletionPolicy: Retain
        Properties:
            BucketName: "mlspamlmodel"
            VersioningConfiguration: 
                Status: "Enabled"

    IAMLambdaRole:
        Type: "AWS::IAM::Role"
        DeletionPolicy: Retain
        Properties:
            Path: "/service-role/"
            RoleName: "lambdaiamrole"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600



    S3BucketPolicy:
        Type: "AWS::S3::BucketPolicy"
        DeletionPolicy: Retain
        Properties:
            Bucket: "mymailbuck"
            PolicyDocument: 
                Version: "2012-10-17"
                Statement: 
                    - 
                        Sid: "PublicReadGetObject"
                        Effect: "Allow"
                        Principal: "*"
                        Action: "s3:GetObject"
                        Resource: "arn:aws:s3:::mymailbuck/*"
                    -
                        Sid: "AllowSESPuts"
                        Effect: "Allow"
                        Principal: 
                            Service: "ses.amazonaws.com"
                        Action: "s3:PutObject"
                        Resource: "arn:aws:s3:::mymailbuck/*"
                        Condition: 
                            StringEquals: 
                                "AWS:Referer": !Ref AWS::AccountId


    SESReceiptRuleSet:
        Type: "AWS::SES::ReceiptRuleSet"
        Properties:
            RuleSetName: "recievemail1"

    SESReceiptRule:
        Type: "AWS::SES::ReceiptRule"
        Properties:
            Rule: 
                ScanEnabled: true
                Actions: 
                  - 
                    S3Action: 
                        BucketName: "mymailbuck"
                Enabled: true
                Name: "receiveml1"
                TlsPolicy: "Optional"
            RuleSetName: "recievemail1"